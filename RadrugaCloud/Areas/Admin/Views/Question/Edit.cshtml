@model RadrugaCloud.Areas.Admin.Models.QuestionUi

@{
    ViewBag.Title = "Редактирование теста";
}

<h2>Тест</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Редактирование</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">

            @Html.LabelFor(model => model.QuestionOptions, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Ajax.ActionLink("Добавить вариант", "OptionsEditor", null, new AjaxOptions
                                                                                {
                                                                                    UpdateTargetId = "divOptions",
                                                                                    InsertionMode = InsertionMode.InsertAfter,
                                                                                    OnSuccess = "questionEditor.updateOption()"
                                                                                }, new { @class = "btn", id = "btnAddOption" })
                <div id="divOptions">
                    @if (Model != null && Model.QuestionOptions != null && Model.QuestionOptions.Any())
                    {
                        var qoList = Model.QuestionOptions.OrderBy(qo => qo.Number);

                        foreach (var questionOption in qoList)
                         {
                             Html.RenderPartial("Controls/OptionsEditor", questionOption);
                         }
                    }

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ajax")
    <script src="~/Scripts/Custom/QuestionEditor.js"></script>
}