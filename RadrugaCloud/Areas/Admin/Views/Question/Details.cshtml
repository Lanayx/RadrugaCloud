@using Core.DomainModels
@model Core.DomainModels.Question

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Question</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Text)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Text)
        </dd>

    </dl>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

    </dl>
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Options)
        </dt>

        <dd>
            @if (Model.Options != null)
            {
                foreach (var option in Model.Options)
                {
                    <div>
                        <span style="text-decoration: underline">@option.Text</span>

                        @if (option.PersonQualitiesWithScores != null)
                        {
                            foreach (var personQualityWithScore in option.PersonQualitiesWithScores)
                            {
                                <div>
                                    @(((IEnumerable<PersonQuality>)ViewBag.PersonQualities).First(pq => pq.Id == personQualityWithScore.PersonQualityId).Name)
                                    : @personQualityWithScore.Score
                                </div>
                            }
                        }
                        <span style="font-style: italic">@option.NextQuestionId</span>
                    </div>
                    <br />
                }
            }
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
