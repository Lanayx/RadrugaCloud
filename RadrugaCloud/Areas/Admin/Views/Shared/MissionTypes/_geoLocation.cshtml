@using Core.Tools
@model RadrugaCloud.Models.MissionUi
@{
    var commonPlaces = (List<GroupedSelectListItem>)ViewBag.CommonPlaces;    
}

<div class="form-group">
    @Html.LabelFor(model => model.AccuracyRadius, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.AccuracyRadius, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AccuracyRadius, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CalculationFunctionParameters, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Ajax.ActionLink("Добавить параметр", "SeederCalculationFunctionParameters", "Mission", null, new AjaxOptions
                                                                                               {
                                                                                                   UpdateTargetId = "divCalculationParameters",
                                                                                                   InsertionMode = InsertionMode.InsertAfter,
                                                                                                   OnSuccess = "renameParameters",
                                                                                               }, new { @class = "btn" })
        <div id="divCalculationParameters">
            @if (Model.CalculationFunctionParameters != null && commonPlaces != null)
            {
                foreach (var parameter in Model.CalculationFunctionParameters)
                {
                    Html.RenderPartial("Controls/CalculationFunctionParametersEditor", commonPlaces, new ViewDataDictionary { { "SelectedAlias", parameter } });
                }
            }
        </div>
    </div>
    @Html.ValidationMessageFor(model => model.CalculationFunctionParameters, "", new { @class = "text-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UserCoordinatesCalculationFunction, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <p>function(param1, param 2, ...) {</p>
        @Html.TextAreaFor(model => model.UserCoordinatesCalculationFunction, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UserCoordinatesCalculationFunction, "", new { @class = "text-danger" })
        <p>}</p>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.SecondsFor3Stars, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.SecondsFor3Stars, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SecondsFor3Stars, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SecondsFor2Stars, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.SecondsFor2Stars, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SecondsFor2Stars, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SecondsFor1Star, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.SecondsFor1Star, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SecondsFor1Star, "", new { @class = "text-danger" })
    </div>
</div>
<script src="~/Scripts/Custom/CalculationParametersEditor.js"></script>